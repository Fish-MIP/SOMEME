---
title: "Creating masks to extract data for the Southern Ocean"
author: "Denisse Fierro Arcos"
date: "2020-02-19"
format: gfm
toc: true
editor: source
---

# Creating masks to extract data for the Southern Ocean

We will create two types of masks: a raster (gridded) mask that can be used to extract data from `netcdf` files, and a data frame mask that can be used to extract data from a data frame.

## Loading libraries

```{r}
#| warning: false
#Spatial data
library(sf)
library(terra)
library(measoshapes)

#Manipulating and plotting data
library(tidyverse)

#Base map
library(rnaturalearth)
```

## Loading data

We will load the following data to our session:\
\* Boundaries for the [Commission for the Conservation of Marine Antarctic Living Resources (CCAMLR) Convention Areas](https://www.ccamlr.org/en/organisation/convention-area), which can be downloaded from the [CCAMLR GIS portal](https://gis.ccamlr.org/)\
\* Marine Ecosystem Assessment for the Southern Ocean boundaries from the [`measoshapes` R package](https://github.com/AustralianAntarcticDivision/measoshapes)\
\* Sample of the grid used by the FishMIP models

```{r}
#CCAMLR boundaries
ccamlr <- read_sf("../../SO_shapefiles/CCAMLR_MPA_Planning_Domains/CCAMLR_MPA_Planning_Domains_wgs84.shp")

#MEASO boundaries
measo <- measo_regions05_ll |> 
  #Removing "temperate" regions as they are not relevant for SOMEME
  filter(str_detect(name, "T$", negate = T)) |> 
  #Recreating CRS as per warning
  st_set_crs(4326)|>
  #Add new column with unique ID identifying each MEASO area
  mutate(id = as.numeric(as.factor(name)))

#FishMIP models
fishmip <- rast("../../SO_shapefiles/area_1deg.nc")
```

## Creating raster masks

We will use unique IDs to identify each region in the raster mask, so after creating the mask, we will also store a file that will help us identify each region.

```{r}
#| eval: false
#Ensure an "outputs" folder exists
out_folder <- "../outputs"
if(dir.exists(out_folder) == F){
  dir.create(out_folder)
}

#Rasterise CCAMLR shapefile
ccamlr_ras <- rasterize(ccamlr, fishmip, field = "Name", touches = T,
                        fun = "min", background = NA)
#Saving raster
writeCDF(ccamlr_ras, file.path(out_folder, "ccamlr_mpa_planning_1deg.nc"),
         overwrite = T, varname = "ccamlr", 
         longname = "ccamlr mpa planning domains",
         missval = NA)

#Get keys to interpret mask
ccamlr |> 
  st_drop_geometry() |> 
  write_csv(file.path(out_folder, "ccamlr_mpa_planning_keys.csv"))


#Rasterise MEASO boundaries
measo_ras <- rasterize(measo, fishmip, field = "id", touches = T, 
                       fun = "min", background = NA)

#Saving raster
writeCDF(measo_ras, file.path(out_folder, "measo_regions_1deg.nc"),
         overwrite = T, varname = "measo", longname = "measo regions",
         missval = NA)

#Get keys to interpret mask
measo |> 
  st_drop_geometry() |> 
  write_csv(file.path(out_folder, "measo_regions_keys.csv"))
```

## Creating data frame masks

Using the raster masks created above, we will create the data frame masks. We will also add the area of the grid cells to allow for easy calculation of weighted means by area.

```{r}
#| eval: false
#Transforming sample raster to data frame
fishmip_df <- fishmip |> 
  as.data.frame(xy = T)

#Transforming CCAMLR raster mask
ccamlr_df <- ccamlr_ras |> 
  as.data.frame(xy = T) |> 
  #Add area of grid cells
  left_join(fishmip_df, by = join_by(x, y))

#Saving data frame mask
ccamlr_df |> 
  write_csv(file.path(out_folder, "ccamlr_mpa_planning_1deg.csv"))


#Transforming MEASO raster mask
measo_df <- measo_ras |> 
  as.data.frame(xy = T) |> 
  #Add area of grid cells
  left_join(fishmip_df, by = join_by(x, y))

#Saving data frame mask
measo_df |> 
  write_csv(file.path(out_folder, "measo_regions_1deg.csv"))
```
